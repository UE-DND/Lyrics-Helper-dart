// Mocks generated by Mockito 5.4.6 from annotations
// in lyricify_lyrics_helper/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:lyricify_lyrics_helper/providers/web/netease/api.dart' as _i2;
import 'package:lyricify_lyrics_helper/providers/web/netease/response.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Api].
///
/// See the documentation for Mockito's code generation for more information.
class MockApi extends _i1.Mock implements _i2.Api {
  MockApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.EapiSearchResult?> searchNew(String? keyword) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchNew,
          [keyword],
        ),
        returnValue: _i3.Future<_i4.EapiSearchResult?>.value(),
      ) as _i3.Future<_i4.EapiSearchResult?>);

  @override
  _i3.Future<_i4.LyricResult?> getLyric(String? songId) => (super.noSuchMethod(
        Invocation.method(
          #getLyric,
          [songId],
        ),
        returnValue: _i3.Future<_i4.LyricResult?>.value(),
      ) as _i3.Future<_i4.LyricResult?>);

  @override
  _i3.Future<_i4.SearchResult?> search(
    String? keyword,
    _i2.SearchType? type,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            keyword,
            type,
          ],
        ),
        returnValue: _i3.Future<_i4.SearchResult?>.value(),
      ) as _i3.Future<_i4.SearchResult?>);

  @override
  _i3.Future<_i4.AlbumResult?> getAlbum(String? albumId) => (super.noSuchMethod(
        Invocation.method(
          #getAlbum,
          [albumId],
        ),
        returnValue: _i3.Future<_i4.AlbumResult?>.value(),
      ) as _i3.Future<_i4.AlbumResult?>);

  @override
  _i3.Future<_i4.PlaylistResult?> getPlaylist(String? playlistId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlaylist,
          [playlistId],
        ),
        returnValue: _i3.Future<_i4.PlaylistResult?>.value(),
      ) as _i3.Future<_i4.PlaylistResult?>);

  @override
  _i3.Future<Map<String, _i4.Datum>> getDatum(
    List<String>? songIds, {
    int? bitrate = 999000,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDatum,
          [songIds],
          {#bitrate: bitrate},
        ),
        returnValue:
            _i3.Future<Map<String, _i4.Datum>>.value(<String, _i4.Datum>{}),
      ) as _i3.Future<Map<String, _i4.Datum>>);

  @override
  _i3.Future<Map<String, _i4.Song>> getSongs(List<String>? songIds) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSongs,
          [songIds],
        ),
        returnValue:
            _i3.Future<Map<String, _i4.Song>>.value(<String, _i4.Song>{}),
      ) as _i3.Future<Map<String, _i4.Song>>);

  @override
  _i3.Future<_i4.LyricResult?> getLyricNew(String? songId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLyricNew,
          [songId],
        ),
        returnValue: _i3.Future<_i4.LyricResult?>.value(),
      ) as _i3.Future<_i4.LyricResult?>);

  @override
  _i3.Future<String> getAsync(String? url) => (super.noSuchMethod(
        Invocation.method(
          #getAsync,
          [url],
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #getAsync,
            [url],
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> postAsync(
    String? url, {
    Map<String, String>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postAsync,
          [url],
          {#body: body},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #postAsync,
            [url],
            {#body: body},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> postJsonAsync(
    String? url, {
    Object? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postJsonAsync,
          [url],
          {#body: body},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #postJsonAsync,
            [url],
            {#body: body},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> postAsyncObject(
    String? url, {
    required Map<String, Object>? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postAsyncObject,
          [url],
          {#body: body},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #postAsyncObject,
            [url],
            {#body: body},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<String> postAsyncRaw(
    String? url, {
    required String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postAsyncRaw,
          [url],
          {#body: body},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #postAsyncRaw,
            [url],
            {#body: body},
          ),
        )),
      ) as _i3.Future<String>);
}
